(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{427:function(a,s,t){a.exports=t.p+"assets/img/image-20221114133544106.7a54e9e3.png"},469:function(a,s,t){"use strict";t.r(s);var e=t(2),i=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("说明")]),a._v(" "),s("p",[a._v("记录 Git 概念以及常用指令")])]),a._v(" "),s("h2",{attrs:{id:"版本控制工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本控制工具"}},[a._v("#")]),a._v(" 版本控制工具")]),a._v(" "),s("p",[a._v("集中式版本控制工具：版本库集中存放于中央服务器")]),a._v(" "),s("p",[a._v("分布式版本控制工具：每个参与项目的人电脑上都有一个完整的版本库，工作时无需联网，多人协作只需要将各自的修改推送给对方")]),a._v(" "),s("h2",{attrs:{id:"工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[a._v("#")]),a._v(" 工作流程")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("远程仓库（抓取/克隆、推送）本地仓库\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ul",[s("li",[a._v("clone：从远程仓库中克隆代码到本地")]),a._v(" "),s("li",[a._v("checkout：检出，从本地仓库中检出一个仓库分支然后修改、提交")]),a._v(" "),s("li",[a._v("add：添加，在提交之前将代码提交到暂存区")]),a._v(" "),s("li",[a._v("commit：提交，提交到本地仓库，本地仓库中保存修改的各个历史版本")]),a._v(" "),s("li",[a._v("fetch：抓取，从远程库抓取到本地仓库")]),a._v(" "),s("li",[a._v("pull：拉取，从远程库拉到本地仓库，自动合并，相当于 fetch + merge")]),a._v(" "),s("li",[a._v("push：推送，修改完成后，将代码推送到远程仓库")])]),a._v(" "),s("h2",{attrs:{id:"基本配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本配置"}},[a._v("#")]),a._v(" 基本配置")]),a._v(" "),s("p",[a._v("设置用户信息：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('git config --global user.name "xxx"\n\ngit config --global user.email "xxxx"\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("查看用户信息：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --global user.name\n\ngit config --global user.email\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"解决中文乱码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决中文乱码问题"}},[a._v("#")]),a._v(" 解决中文乱码问题")]),a._v(" "),s("p",[a._v("在 GitBash 中执行命令：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --global core.quotepath false\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("在 Git 安装目录下的 "),s("code",[a._v("/etc/bash.bashrc")]),a._v(" 文件最后加入两行：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('export LANG="zh_CN.UTF-8"\nexport LC_ALL="zh_CN.UTF-8"\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"常用指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[a._v("#")]),a._v(" 常用指令")]),a._v(" "),s("p",[a._v("Git 工作目录的几种状态：")]),a._v(" "),s("p",[s("img",{attrs:{src:t(427),alt:"image-20221114133544106"}})]),a._v(" "),s("ul",[s("li",[a._v("暂存区：提交到仓库之前的缓存区（git add .）")]),a._v(" "),s("li",[a._v("将暂存区内容提交到仓库后，每次提交生成提交记录（生成历史版本，此时代码删不掉）")])]),a._v(" "),s("p",[a._v("常用命令：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("git config --global user.name")]),a._v(" 用户名 （设置用户签名）")]),a._v(" "),s("li",[s("code",[a._v("git config --global user.email")]),a._v(" 邮箱（这两个命令只需首次使用时候设置）")]),a._v(" "),s("li",[s("code",[a._v("git init")]),a._v("初始化本地仓库")]),a._v(" "),s("li",[s("code",[a._v("git status")]),a._v("查看本地库状态")]),a._v(" "),s("li",[s("code",[a._v("git add FILENAME")]),a._v("，"),s("code",[a._v("git add .")]),a._v("添加到暂存区")]),a._v(" "),s("li",[s("code",[a._v('git commit -m "MESSAGE" FILENAME')]),a._v("，"),s("code",[a._v('git commit -m "MESSAGE"')]),a._v("提交到本地库")]),a._v(" "),s("li",[s("code",[a._v("git reflog")]),a._v(" 查看历史版本")]),a._v(" "),s("li",[s("code",[a._v("git reset --hard VERSION_CODE")]),a._v(" 版本穿梭")])]),a._v(" "),s("h3",{attrs:{id:"设置用户签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置用户签名"}},[a._v("#")]),a._v(" 设置用户签名")]),a._v(" "),s("p",[s("code",[a._v("git config --global user.name")]),a._v(" 和"),s("code",[a._v("git config --global user.email")]),a._v("设置用户签名，用于区别代码提交者，用户的签名信息可以在每一个版本的提交信息中看到，从而确定提交由谁发起，Git 首次使用必须设置一下用户签名，否则无法提交代码，此外，注意此处设置的用户签名与登录 Github 或其他代码托管中心的账号没有任何关系")]),a._v(" "),s("p",[a._v("设置完成后可在用户的系统目录下，"),s("code",[a._v(".gitconfig")]),a._v("文件中看到")]),a._v(" "),s("h3",{attrs:{id:"初始化本地库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化本地库"}},[a._v("#")]),a._v(" 初始化本地库")]),a._v(" "),s("p",[a._v("使用"),s("code",[a._v("git init")]),a._v("初始化仓库")]),a._v(" "),s("h3",{attrs:{id:"新增文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增文件"}},[a._v("#")]),a._v(" 新增文件")]),a._v(" "),s("p",[a._v("使用命令 "),s("code",[a._v("git add FILENAME")]),a._v("将工作区文件提交到暂存区")]),a._v(" "),s("p",[a._v("使用命令"),s("code",[a._v("git rm --cached FILENAME")]),a._v(" 移除提交到暂存区的文件（工作区为改变）")]),a._v(" "),s("p",[a._v("这一步易出现的警告：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("warning: LF will be replaced by CRLF in filexxx\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这是因为在安装 Git 的时候勾选了自动根据系统切换换行符（windows 下换行符是 CRLF，Linux 下则是 LF）")]),a._v(" "),s("h3",{attrs:{id:"提交到本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交到本地仓库"}},[a._v("#")]),a._v(" 提交到本地仓库")]),a._v(" "),s("p",[a._v("使用命令"),s("code",[a._v('git commit -m "MESSAGE"FILENAME')]),a._v("，将暂存区内容提交到本地仓库")]),a._v(" "),s("h3",{attrs:{id:"查看提交日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看提交日志"}},[a._v("#")]),a._v(" 查看提交日志")]),a._v(" "),s("p",[a._v("使用命令"),s("code",[a._v("git log")]),a._v("查看提交日志，可选参数有：")]),a._v(" "),s("ul",[s("li",[a._v("--all  显示所有分支")]),a._v(" "),s("li",[a._v("--pretty=oneline  将提交信息显示为一行")]),a._v(" "),s("li",[a._v("--abbrev-commit  简化输出信息")]),a._v(" "),s("li",[a._v("--graph  以图的形式显示")])]),a._v(" "),s("p",[a._v("为了使用方便，可以使用别名设置简化命令，在"),s("code",[a._v("bash.bashrc")]),a._v("中添加：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n# alias 用于设置别名 例如：\nalias ll='ls -al'\n\nsource ~/bash\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("strong",[a._v("查看所有版本（即使回退也可以看到）")]),a._v("：使用 "),s("code",[a._v("git reflog")]),a._v("命令")]),a._v(" "),s("h3",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[a._v("#")]),a._v(" 版本回退")]),a._v(" "),s("p",[a._v("版本回退用于版本切换：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git reset --hard commitID\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("commitID 可以使用 "),s("code",[a._v("git-log")]),a._v("或者"),s("code",[a._v("git reflog")]),a._v("命令查看")]),a._v(" "),s("h2",{attrs:{id:"分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[a._v("#")]),a._v(" 分支")]),a._v(" "),s("p",[a._v("版本控制的过程中，为了同时推进多个任务，可以为每个任务创建单独的分支，将每个任务从研发主线上分离出来，这样开发自己分支的同时不会影响主线运行（分支的底层通过指针引用实现）")]),a._v(" "),s("p",[a._v("分支的主要命令：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("git branch NAME")]),a._v("创建分支")]),a._v(" "),s("li",[s("code",[a._v("git branch -v")]),a._v("查看分支")]),a._v(" "),s("li",[s("code",[a._v("git checkout NAME")]),a._v("切换分支")]),a._v(" "),s("li",[s("code",[a._v("git merge NAME")]),a._v("将指定分支合并到当前分支上")]),a._v(" "),s("li",[s("code",[a._v("git branch -d NAME")]),a._v("，先移动到其他分支，再通过此命令删除分支，如果删除不成功，则使用强制删除"),s("code",[a._v("git branch -D NAME")])])]),a._v(" "),s("h3",{attrs:{id:"合并冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突"}},[a._v("#")]),a._v(" 合并冲突")]),a._v(" "),s("p",[a._v("不同分支对于同一文件同一位置进行修改")]),a._v(" "),s("h2",{attrs:{id:"团队协作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队协作"}},[a._v("#")]),a._v(" 团队协作")]),a._v(" "),s("p",[a._v("团队合作开发有两种方式：")]),a._v(" "),s("ul",[s("li",[a._v("团队内协作\n"),s("ul",[s("li",[a._v("通过 push - clone - pull 操作完成")]),a._v(" "),s("li",[a._v("每个成员都可以将自己的修改 push 到远程仓库")]),a._v(" "),s("li",[a._v("团队成员可以通过 clone 将远程仓库克隆到本地")]),a._v(" "),s("li",[a._v("代码修改后，团队成员可以通过 pull 将远程仓库拉取到本地")])])]),a._v(" "),s("li",[a._v("跨团队协作\n"),s("ul",[s("li",[a._v("团队之外的人可以通过 fork 仓库对仓库内容修改（可提交多次）")]),a._v(" "),s("li",[a._v("修改完成后进行 pull request，将修改交由仓库管理员审核")])])])]),a._v(" "),s("h3",{attrs:{id:"拉取、推送代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取、推送代码"}},[a._v("#")]),a._v(" 拉取、推送代码")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("git remote -v")]),a._v("显示所有的远程库")]),a._v(" "),s("li",[s("code",[a._v("git remote add REPOSITORY_NAME ADDRESS")]),a._v("：添加远程仓库，并设置别名（REPOSITORY_NAME）")]),a._v(" "),s("li",[s("code",[a._v("git clone ADDRESS")]),a._v("：克隆到本地，克隆会拉取代码，并进行本地初始化以及创建别名（origin）")]),a._v(" "),s("li",[s("code",[a._v("git pull REPOSITORY_NAME BRANCH_NAME")])])]),a._v(" "),s("h2",{attrs:{id:"通过-ignore-屏蔽不想提交的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-ignore-屏蔽不想提交的文件"}},[a._v("#")]),a._v(" 通过 ignore 屏蔽不想提交的文件")]),a._v(" "),s("p",[a._v("语法规范：")]),a._v(" "),s("ul",[s("li",[s("p",[s("code",[a._v("#")]),a._v("：注释")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("*")]),a._v("：用于匹配零个或多个字符：")]),a._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[a._v("*.a  -- 忽略 .a 文件\n*.[oa] -- 忽略所有的 .a 和 .o 文件 [] 表示匹配括号内的任意字符，例如[abc]表示匹配a，b，c三个字符\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("!")]),a._v(" ：否定忽略 例如 !a.txt 表示 a.txt 不会被忽略")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("/")]),a._v("：匹配目录")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("/bin")]),a._v(" 表示忽略根目录下的 bin 文件夹，但是不会忽略 bin 文件夹下的子文件夹，例如"),s("code",[a._v("/bin/file")])]),a._v(" "),s("li",[s("code",[a._v("bin/")]),a._v("表示忽略 bin 文件夹下的所有子内容，但是不会忽略 bin 文件夹本身")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("**")]),a._v("：匹配多级目录")])])]),a._v(" "),s("p",[s("code",[a._v(".gitignore")]),a._v("文件中每行匹配一个规则，常用的例子如：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 忽略所有的bin文件\n*.bin\n\n# 跳过指定文件\n!a.bin\n!/files/b.bin\n\n# 忽略指定目录下的 txt 文件，但不包括该目录的子目录，例如file1/file2/a.txt\nfile1/*.txt\n\n# 忽略某个目录下的所有 txt 文件\nfile1/**/*.txt\n\n# 忽略当前目录的 txt 文件，但不包括子目录的 txt 文件\n/*.txt\n\n# 忽略当前文件夹下的 file 文件夹下的所有内容\nfile/\n\n# 忽略所有目录中的 test 文件夹： /test a/test a/b/test\n**/test\n\n# 忽略 node_modules 文件夹\nnode_modules/\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);